PREFIX=@prefix@
XSDFILES=@XSDFILES@
XSDPROTO=$(XSDFILES:.xsd=.proto)
XSDTHRIFT=$(XSDFILES:.xsd=.thrift)
XSD2IDL=@XSD2IDL@
PROTOFILES=msg.proto feed.proto control.proto profile.proto mmdef.proto $(XSDPROTO)
THRIFTFILES=msg.thrift feed.thrift control.thrift profile.thrift $(XSDTHRIFT)
THRIFT=@THRIFT@
PROTOC=@PROTOC@
PERL=@PERL@
PYTHON=@PYTHON@
CC=@CC@
CXX=@CXX@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@

%.proto: %.xsd
	$(XSD2IDL) --protobuf  $< | egrep -v '(my|one)JarPath=' > $@
	
%.thrift: %.xsd
	$(XSD2IDL) --thrift $< | egrep -v '(my|one)JarPath=' > $@

RFC4765-IDMEF-2007.thrift: RFC4765-IDMEF-2007.xsd
	@echo "$< will contain circular dependencies, which thrift doesn't allow. Using the prebuilt."
	cp ../prebuilt/RFC4765-IDMEF-2007.thrift .
#	$(XSD2IDL) --thrift --force-circular $< | egrep -v '(my|one)JarPath=' > $@
	
MAEC-v2.proto: 
	@echo "Skipping, xsd2idl doesnt process this correctly. Using the prebuilt."
	cp ../prebuilt/MAEC-v2.proto .

MAEC-v2.thrift: 
	@echo "Skipping, xsd2idl doesnt process this correctly. Using the prebuilt."
	cp ../prebuilt/MAEC-v2.thrift .
	

all: @TARGET_XSD2IDL@ @TARGETS@



install:
	rm -fr $(PREFIX)/lib/cif-protocol
	[ -d $(PREFIX)/lib/cif-protocol ] || mkdir $(PREFIX)/lib/cif-protocol
#	( cd pb-perl ; make install )
	cp -r *.thrift *.proto pb-* thrift-* $(PREFIX)/lib/cif-protocol/



pb_perl: $(PROTOFILES)
	@echo "Generating Protocol Buffer Perl Modules"
	-(cd pb-perl && $(PERL) sbin/generate_perl_bindings.pl)
	-( cd pb-perl/ && $(PERL) Makefile.PL && make test)

thrift_perl: $(THRIFTFILES)
	@echo "Generating Thrift Perl Modules"
	@[ -d thrift-perl ] || mkdir thrift-perl
	@for f in $(THRIFTFILES); do                          \
		$(THRIFT) -o thrift-perl -strict --gen perl $$f;  \
	done;



pb_cpp: $(PROTOFILES)
	@echo "Generating Protocol Buffer C++ Modules"
	@[ -d pb-cpp/gen-cpp ] || mkdir pb-cpp/gen-cpp
	@for f in $(PROTOFILES); do         \
		$(PROTOC) --cpp_out=pb-cpp/gen-cpp $$f; \
	done;

thrift_cpp: $(THRIFTFILES)
	@echo "Generating Thrift C++ Modules"
	@[ -d thrift-cpp ] || mkdir thrift-cpp
	@for f in $(THRIFTFILES); do                        \
		$(THRIFT) -o thrift-cpp -strict --gen cpp $$f;  \
	done;




pb_C: $(PROTOFILES)
	@echo "Protocol Buffers for C not available"

thrift_C: $(THRIFTFILES)
	@echo "Generating Thrift C Modules"
	@[ -d thrift-c ] || mkdir thrift-c
	@for f in $(THRIFTFILES); do                          \
		$(THRIFT) -o thrift-c -strict --gen c_glib $$f; \
	done;




pb_python: $(PROTOFILES)
	@echo "Generating Protocol Buffer Python Modules"
	@[ -d pb-python/gen-py ] || mkdir pb-python/gen-py
	@for f in $(PROTOFILES); do               \
		$(PROTOC) --python_out=pb-python/gen-py $$f; \
	done;

thrift_python: $(THRIFTFILES)
	@echo "Generating Thrift Python Modules"
	@[ -d thrift-python ] || mkdir thrift-python
	@for f in $(THRIFTFILES); do                          \
		$(THRIFT) -o thrift-python -strict --gen py $$f;  \
	done;


pb_java: $(PROTOFILES)
	@echo "Generating Protocol Buffer Java Modules"
	@[ -d pb-java/gen-java ] || mkdir pb-java/gen-java
	@for f in $(PROTOFILES); do               \
		$(PROTOC) --java_out=pb-java/gen-java $$f; \
	done;

thrift_java: $(THRIFTFILES)
	@echo "Generating Thrift Java Modules"
	@[ -d thrift-java ] || mkdir thrift-java
	@for f in $(THRIFTFILES); do                          \
		$(THRIFT) -o thrift-java -strict --gen java $$f;  \
	done;
	
	
	

prebuilts:
	@echo "using prebuilts"
	cp ../prebuilt/*.proto ../prebuilt/*.thrift .
	
xsd2idl: $(XSDPROTO) $(XSDTHRIFT)

clean:
	-( cd pb-perl/  && make realclean)
	rm -f $(XSDPROTO) $(XSDTHRIFT)
	# don't rm pb-perl because thats not autogenerated
	rm -fr pb-cpp/gen-*     pb-python/gen-py/*.py pb-python/gen-py/*.pyc     pb-java/gen-* \
	       thrift-cpp/gen-* thrift-python/gen-* thrift-perl/gen-* thrift-java/gen-* thrift-c/gen-*
	
distclean: clean
	rm Makefile
