##
## This file was generated by Google::ProtocolBuffers (0.08_01)
## on Thu Nov 21 19:51:13 2013 from file ../mmdef.proto
##
package mmdef_pb2;
use strict;
use warnings;
use Google::ProtocolBuffers;
{
    unless (VolumeType::VolumeUnitsEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'VolumeType::VolumeUnitsEnum',
            [
               ['VolumeUnitsEnum_numberMachinesAffected', 1],
               ['VolumeUnitsEnum_numberOfWebsitesHosting', 2],
               ['VolumeUnitsEnum_numberOfWebsitesRedirecting', 3],
               ['VolumeUnitsEnum_numberSeenInMalwareSamples', 4],
               ['VolumeUnitsEnum_numberSeenInSpam', 5],
               ['VolumeUnitsEnum_numberUsersAffected', 6],

            ]
        );
    }
    
    unless (Relationship::RelationshipTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'Relationship::RelationshipTypeEnum',
            [
               ['RelationshipTypeEnum_causesToInstall', 1],
               ['RelationshipTypeEnum_contactedBy', 2],
               ['RelationshipTypeEnum_createdBy', 3],
               ['RelationshipTypeEnum_downloadedFrom', 4],
               ['RelationshipTypeEnum_downloads', 5],
               ['RelationshipTypeEnum_hasAssociatedConfiguration', 6],
               ['RelationshipTypeEnum_hasSignature', 7],
               ['RelationshipTypeEnum_hasTaggant', 8],
               ['RelationshipTypeEnum_hosts', 9],
               ['RelationshipTypeEnum_installed', 10],
               ['RelationshipTypeEnum_isClassifiedAs', 11],
               ['RelationshipTypeEnum_isNameServerOf', 12],
               ['RelationshipTypeEnum_isParentOf', 13],
               ['RelationshipTypeEnum_isServerOfService', 14],
               ['RelationshipTypeEnum_operatedByEntity', 15],
               ['RelationshipTypeEnum_partOfPackage', 16],
               ['RelationshipTypeEnum_relatedTo', 17],
               ['RelationshipTypeEnum_resolvesTo', 18],
               ['RelationshipTypeEnum_runs', 19],
               ['RelationshipTypeEnum_sourcedFrom', 20],
               ['RelationshipTypeEnum_usesCNC', 21],
               ['RelationshipTypeEnum_verifiedBy', 22],

            ]
        );
    }
    
    unless (DigitalSignatureObject::TypeType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'DigitalSignatureObject::TypeType',
            [
               ['typeType_CatalogSigned', 1],
               ['typeType_CodeSigned', 2],

            ]
        );
    }
    
    unless (LocationType::LocationTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'LocationType::LocationTypeEnum',
            [
               ['LocationTypeEnum_city', 1],
               ['LocationTypeEnum_countryCodeFIPS', 2],
               ['LocationTypeEnum_countryCodeISO3166_2', 3],
               ['LocationTypeEnum_countryCodeISO3166_3', 4],
               ['LocationTypeEnum_isp', 5],
               ['LocationTypeEnum_region', 6],

            ]
        );
    }
    
    unless (FieldDataEntry::OriginTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'FieldDataEntry::OriginTypeEnum',
            [
               ['OriginTypeEnum_collection', 1],
               ['OriginTypeEnum_desktop', 2],
               ['OriginTypeEnum_gateway', 3],
               ['OriginTypeEnum_honeypot', 4],
               ['OriginTypeEnum_internal', 5],
               ['OriginTypeEnum_isp', 6],
               ['OriginTypeEnum_lan', 7],
               ['OriginTypeEnum_partner', 8],
               ['OriginTypeEnum_spam', 9],
               ['OriginTypeEnum_unknown', 10],
               ['OriginTypeEnum_user', 11],
               ['OriginTypeEnum_wan', 12],

            ]
        );
    }
    
    unless (IPAddress::IPTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'IPAddress::IPTypeEnum',
            [
               ['IPTypeEnum_ipv4', 1],
               ['IPTypeEnum_ipv6', 2],

            ]
        );
    }
    
    unless (ClassificationObject::ClassificationTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'ClassificationObject::ClassificationTypeEnum',
            [
               ['ClassificationTypeEnum_clean', 1],
               ['ClassificationTypeEnum_dirty', 2],
               ['ClassificationTypeEnum_neutral', 3],
               ['ClassificationTypeEnum_unknown', 4],
               ['ClassificationTypeEnum_unwanted', 5],

            ]
        );
    }
    
    unless (Property::PropertyTypeEnum->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'Property::PropertyTypeEnum',
            [
               ['PropertyTypeEnum_adminContact', 1],
               ['PropertyTypeEnum_browser', 2],
               ['PropertyTypeEnum_city', 3],
               ['PropertyTypeEnum_comment', 4],
               ['PropertyTypeEnum_countryCodeFIPS', 5],
               ['PropertyTypeEnum_countryCodeISO3166_2', 6],
               ['PropertyTypeEnum_countryCodeISO3166_3', 7],
               ['PropertyTypeEnum_filename', 8],
               ['PropertyTypeEnum_filepath', 9],
               ['PropertyTypeEnum_httpMethod', 10],
               ['PropertyTypeEnum_isDamaged', 11],
               ['PropertyTypeEnum_isKernel', 12],
               ['PropertyTypeEnum_isNonReplicating', 13],
               ['PropertyTypeEnum_isParasitic', 14],
               ['PropertyTypeEnum_isPolymorphic', 15],
               ['PropertyTypeEnum_isStealth', 16],
               ['PropertyTypeEnum_isVirus', 17],
               ['PropertyTypeEnum_isp', 18],
               ['PropertyTypeEnum_locationUrl', 19],
               ['PropertyTypeEnum_nameServer', 20],
               ['PropertyTypeEnum_operatingSystem', 21],
               ['PropertyTypeEnum_ownerAddress', 22],
               ['PropertyTypeEnum_postData', 23],
               ['PropertyTypeEnum_referrer', 24],
               ['PropertyTypeEnum_region', 25],
               ['PropertyTypeEnum_registrant', 26],
               ['PropertyTypeEnum_registrationDate', 27],
               ['PropertyTypeEnum_registryValueData', 28],
               ['PropertyTypeEnum_technicalContact', 29],
               ['PropertyTypeEnum_urlParameterString', 30],
               ['PropertyTypeEnum_userAgent', 31],

            ]
        );
    }
    
    unless (ObjectProperty->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ObjectProperty',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ReferencesType', 
                    'references', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'timestamp', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Property', 
                    '_property', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'UnspecifiedType', 
                    'id', 4, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (FieldDataEntry->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'FieldDataEntry',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ReferencesType', 
                    'references', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'startDate', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'endDate', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'firstSeenDate', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'FieldDataEntry::OriginTypeEnum', 
                    'origin', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'commonality', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'VolumeType', 
                    'volume', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'importance', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'LocationType', 
                    'location', 9, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (SoftwarePackageObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SoftwarePackageObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'vendor', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'productgroup', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'product', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'version', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'update', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'edition', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'language', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'CPEnameType', 
                    'CPEname', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 9, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ClassificationDetailsType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ClassificationDetailsType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'definitionVersion', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'detectionAddedTimeStamp', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'detectionShippedTimeStamp', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'product', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'productVersion', 5, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ASNObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ASNObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'as_number', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'id', 2, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (MalwareMetaDataType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'MalwareMetaDataType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'company', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'author', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'comment', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'timestamp', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ObjectsType', 
                    'objects', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ObjectPropertiesType', 
                    'objectProperties', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'RelationshipsType', 
                    'relationships', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'FieldDataType', 
                    'fieldData', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_DOUBLE(), 
                    'version', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 10, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (SigningTimestampType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SigningTimestampType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BOOL(), 
                    'valid', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (Property->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'Property',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'Property::PropertyTypeEnum', 
                    'type', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ExtraHashType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ExtraHashType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'type', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (TargetType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'TargetType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Reference', 
                    'ref', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (RelationshipsType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'RelationshipsType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Relationship', 
                    '_relationship', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (TaggantObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'TaggantObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'vendorID', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BOOL(), 
                    'taggantValidity', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'SigningTimestampType', 
                    'signingTimestamp', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 4, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (EntityObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'EntityObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'name', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 2, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (UnspecifiedType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'UnspecifiedType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'baseObjectType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'object', 2, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (DigitalSignatureObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'DigitalSignatureObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'certificateIssuer', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'certificateSubject', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BOOL(), 
                    'certificateValidity', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'certificateRevocationTimestamp', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'SigningTimestampType', 
                    'signingTimestamp', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'DigitalSignatureObject::TypeType', 
                    'type', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 7, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (IPAddress->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'IPAddress',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'IPAddress::IPTypeEnum', 
                    'type', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (Relationship->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'Relationship',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'SourceType', 
                    'source', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'TargetType', 
                    'target', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'timestamp', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'Relationship::RelationshipTypeEnum', 
                    'type', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'UnspecifiedType', 
                    'id', 5, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (UriObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'UriObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'uriString', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'protocol', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'hostname', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'domain', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'port', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'path', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ipProtocol', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 8, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (VolumeType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'VolumeType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'VolumeType::VolumeUnitsEnum', 
                    'units', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (RegistryObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'RegistryObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'key', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'valueName', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 3, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ClassificationObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ClassificationObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'classificationName', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'companyName', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'category', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ClassificationDetailsType', 
                    'classificationDetails', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ClassificationObject::ClassificationTypeEnum', 
                    'type', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 6, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (Reference->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'Reference',
            [

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (FileObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'FileObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'md5', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'sha1', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'sha256', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'sha512', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'size', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'crc32', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'fileType', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'ExtraHashType', 
                    'extraHash', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'filename', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'normalizedNativePath', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'filenameWithinInstaller', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'folderWithinInstaller', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'vendor', 13, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'internalName', 14, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'language', 15, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'productName', 16, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'fileVersion', 17, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'productVersion', 18, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'developmentEnvironment', 19, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'checksum', 20, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'architecture', 21, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'buildTimeDateStamp', 22, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'compilerVersion', 23, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_FLOAT(), 
                    'linkerVersion', 24, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'minOSVersionCPE', 25, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'numberOfSections', 26, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'MIMEType', 27, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'requiredPrivilege', 28, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'DigitalSignatureObject', 
                    'digitalSignature', 29, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'TaggantObject', 
                    'taggant', 30, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'UnspecifiedType', 
                    'id', 31, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (LocationType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'LocationType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'LocationType::LocationTypeEnum', 
                    'type', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (SourceType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SourceType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Reference', 
                    'ref', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ReferencesType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ReferencesType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Reference', 
                    'ref', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (FieldDataType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'FieldDataType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'FieldDataEntry', 
                    '_fieldDataEntry', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (IPObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'IPObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'IPAddress', 
                    'startAddress', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'IPAddress', 
                    'endAddress', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 3, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (CPEnameType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'CPEnameType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'cpeVersion', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ObjectPropertiesType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ObjectPropertiesType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'ObjectProperty', 
                    '_objectProperty', 1, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (ObjectsType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ObjectsType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'FileObject', 
                    'file', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'UriObject', 
                    'uri', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'DomainObject', 
                    'domain', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'RegistryObject', 
                    'registry', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'IPObject', 
                    'ip', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'ASNObject', 
                    'asn', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'EntityObject', 
                    'entity', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'ClassificationObject', 
                    'classification', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'SoftwarePackageObject', 
                    'softwarePackage', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'DigitalSignatureObject', 
                    'digitalSignature', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'TaggantObject', 
                    'taggant', 11, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (DomainObject->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'DomainObject',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'domain', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'id', 2, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

}
1;
