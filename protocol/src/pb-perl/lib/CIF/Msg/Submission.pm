##
## This file was generated by Google::ProtocolBuffers (0.08_01)
## on Fri Dec 27 10:06:01 2013 from file ../submission.proto
##
package CIF::Msg::Submission;
use strict;
use warnings;
use Google::ProtocolBuffers;
{
    unless (Krenk::KrenkType::TlpType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'Krenk::KrenkType::TlpType',
            [
               ['tlp_type_default', 1],
               ['tlp_type_white', 2],
               ['tlp_type_green', 3],
               ['tlp_type_amber', 4],
               ['tlp_type_red', 5],

            ]
        );
    }
    
    unless (Krenk::ContextType::CtypeType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'Krenk::ContextType::CtypeType',
            [
               ['ctype_type_default', 1],
               ['ctype_type_historical', 2],
               ['ctype_type_live_overt', 3],
               ['ctype_type_live_covert', 4],
               ['ctype_type_active', 5],
               ['ctype_type_ext_value', 6],

            ]
        );
    }
    
    unless (Krenk::ContextType::RtypeType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'Krenk::ContextType::RtypeType',
            [
               ['rtype_type_default', 1],
               ['rtype_type_shared', 2],
               ['rtype_type_share_investigation', 3],
               ['rtype_type_share_selectively', 4],
               ['rtype_type_no_share', 5],
               ['rtype_type_ext_value', 6],

            ]
        );
    }
    
    unless (CIF::Msg::SubmissionType::SubmissionRequest->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'CIF::Msg::SubmissionType::SubmissionRequest',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'baseObjectType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'data', 2, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (Krenk::ContextType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'Krenk::ContextType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'Krenk::ContextType::RtypeType', 
                    'rtype', 1, 1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ext_rtype', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'Krenk::ContextType::CtypeType', 
                    'ctype', 3, 1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ext_ctype', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'text', 8, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (Krenk::KrenkType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'Krenk::KrenkType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_DOUBLE(), 
                    'version', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'lang', 2, "EN"
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'Krenk::KrenkType::TlpType', 
                    'tlp', 3, 5
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ext_tlp', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'ttl', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'Description', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'Krenk::ContextType', 
                    'Context', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ReportTime', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'StartTime', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ExpirationTime', 10, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

    unless (CIF::Msg::SubmissionType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'CIF::Msg::SubmissionType',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_DOUBLE(), 
                    'version', 1, 20131225
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'apikey', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'CIF::Msg::SubmissionType::SubmissionRequest', 
                    'submissionRequest', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'Krenk::KrenkType', 
                    'disclosure', 4, undef
                ],

            ],
            { 'create_accessors' => 1, 'follow_best_practice' => 1,  }
        );
    }

}
1;
