package CIF.msg;
 
 
message RegisterResponse {
	required int32 REQport = 1;
	required int32 PUBport = 2;
}
	
message IPublishRequest {
	required string ipaddress = 1;
	required int32 port = 2;
}
	
message ListClientsResponse {
	repeated string client = 1;
	repeated int32 connectTimestamp = 2;
}

message PingRequest {
	optional double ts = 1;
	optional int32  pingseq = 2;
}

// supported ("indexed") requests are:
//   by-apikey
//   by-alias
//   by-group
// in that order, if multiple are filled in, the first one
// from the above list is used.

message APIKeyRequest {
	optional string apikey = 1;
	optional string alias = 2;
        optional bool restrictedAccess = 3;
        optional bool writeAccess = 4;
        optional string description = 5;
        optional int32 expires = 6; // timestamp,UTC 0=never
        optional bool revoked = 7;
        repeated APIKeyGroup groupsList = 8;
        repeated string restrictionsList = 9;
        optional string parent = 10;
}

message APIKeyGroup {
	optional string groupname = 1;
	optional string groupid = 2;
	optional bool default = 3;
}

message APIKeyResponse {
	optional string apikey = 1;
	optional string alias = 2;
	optional bool restrictedAccess = 3;
	optional bool writeAccess = 4;
	optional string description = 5;
	optional int32 expires = 6; // timestamp,UTC 0=never 
	optional bool revoked = 7;
        repeated APIKeyGroup groupsList = 8;
        repeated string addedByList = 9;
	repeated string restrictionsList = 10;
	optional string parent = 11;
	optional int32 created = 12;
}

message ControlType {
    enum StatusType {
        SUCCESS         = 1;
        FAILED          = 2;
        UNAUTHORIZED    = 3;
        DUPLICATE       = 4;
    }
    
    enum MsgType {
        COMMAND     = 1;
        REPLY       = 2;
    }
    
    // these messages are used for communication between the CIF
    // components. 
    
    enum CommandType {
    	REGISTER    = 1;
    	UNREGISTER  = 2;
    	IPUBLISH    = 3;
    	LISTCLIENTS = 4;
    	SHUTDOWN    = 5;
    	STATS       = 6;
    	PING        = 7;
    	PAUSE       = 8;
    	RESUME      = 9;
    	RESTART     = 10;
    	
    	APIKEY_ADD     = 11;
    	APIKEY_UPDATE  = 12;
    	APIKEY_DEL     = 13;
    	APIKEY_LIST    = 14;
    	APIKEY_GET     = 15;
    	
    	APIKEY_GROUPS_ADD    = 16;
    	APIKEY_GROUPS_UPDATE = 17;
    	APIKEY_GROUPS_DEL    = 18;
    	APIKEY_GROUPS_LIST   = 19;
    	APIKEY_GROUPS_GET    = 20;
    }
    
    optional double version      = 1 [default = 20130103.00];
    optional bytes seq           = 2; // used to match commands to replies, must be preserved in replies 
    optional string dst          = 3;
    optional string src          = 4;
    optional StatusType status   = 5;
    optional string  statusMsg   = 6;
    optional MsgType type        = 7;
    optional CommandType command = 8;
    
    optional string apikey       = 9;
    
    optional RegisterResponse    registerResponse    = 10;
    optional IPublishRequest     iPublishRequest     = 11;
    optional ListClientsResponse listClientsResponse = 12;
    optional PingRequest         pingRequest         = 13;
    optional APIKeyRequest       apiKeyRequest       = 14;
    repeated APIKeyResponse      apiKeyResponseList  = 15;
}


