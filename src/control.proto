package CIF.msg;
 
 
message RegisterResponse {
	required int32 REQport = 1;
	required int32 PUBport = 2;
}
	
message IPublishRequest {
	required string ipaddress = 1;
	required int32 port = 2;
}
	
message ListClientsResponse {
	repeated string client = 1;
	repeated int32 connectTimestamp = 2;
}

message PingRequest {
	optional double ts = 1;
	optional int32  pingseq = 2;
}

message APIKeyRequest {
	optional string apikey = 1;
	optional string alias = 2;
	optional string guid = 3;
	optional bool restrictedAccess = 4;
	optional bool writeAccess = 5;
	optional string description = 6;
	repeated string groups = 7;
}

message APIKeyResponse {
	optional string apikey = 1;
	optional string alias = 2;
	optional string guid = 3;
	optional bool restrictedAccess = 4;
	optional bool writeAccess = 5;
	optional string description = 6;
	repeated string groups = 7;
	repeated string addedBy = 8;
}

message ControlType {
    enum StatusType {
        SUCCESS         = 1;
        FAILED          = 2;
        UNAUTHORIZED    = 3;
        DUPLICATE       = 4;
    }
    
    enum MsgType {
        COMMAND     = 1;
        REPLY       = 2;
    }
    
    // these messages are used for communication between the CIF
    // components. 
    
    enum CommandType {
    	REGISTER    = 1;
    	UNREGISTER  = 2;
    	IPUBLISH    = 3;
    	LISTCLIENTS = 4;
    	SHUTDOWN    = 5;
    	STATS       = 6;
    	PING        = 7;
    	PAUSE       = 8;
    	RESUME      = 9;
    	RESTART     = 10;
    	
    	APIKEY_ADD     = 11;
    	APIKEY_UPDATE  = 12;
    	APIKEY_DEL     = 13;
    	APIKEY_REVOKE  = 14;
    	APIKEY_LIST    = 15;
    	
    	APIKEY_GROUPS_ADD    = 16;
    	APIKEY_GROUPS_UPDATE = 17;
    	APIKEY_GROUPS_DEL    = 18;
    	APIKEY_GROUPS_REVOKE = 19;
    	APIKEY_GROUPS_LIST   = 20;
    }
    
    optional double version       = 1 [default = 20120927.00];
    optional bytes seq           = 2; // used to match commands to replies, must be preserved in replies 
    optional string dst          = 3;
    optional string src          = 4;
    optional StatusType status   = 5;
    optional MsgType type        = 6;
    optional CommandType command = 7;
    
    optional string apikey       = 8;
    
	optional RegisterResponse    registerResponse    =  9;
	optional IPublishRequest     iPublishRequest     = 10;
	optional ListClientsResponse listClientsResponse = 11;
	optional PingRequest         pingRequest         = 12;
}


