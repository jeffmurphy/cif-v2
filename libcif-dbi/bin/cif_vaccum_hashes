#!/usr/bin/perl

use warnings;
use strict;

# fix lib paths, some may be relative
BEGIN {
    require File::Spec;
    my @libs = ("lib", "local/lib");
    my $bin_path;

    for my $lib (@libs) {
        unless ( File::Spec->file_name_is_absolute($lib) ) {
            unless ($bin_path) {
                if ( File::Spec->file_name_is_absolute(__FILE__) ) {
                    $bin_path = ( File::Spec->splitpath(__FILE__) )[1];
                }
                else {
                    require FindBin;
                    no warnings "once";
                    $bin_path = $FindBin::Bin;
                }
            }
            $lib = File::Spec->catfile( $bin_path, File::Spec->updir, $lib );
        }
        unshift @INC, $lib;
    }

}

use lib '../libcif/lib';

use Getopt::Std;
use DateTime;
use Config::Simple;
use Data::Dumper;
use CIF qw/debug/;
use CIF::Archive;

my %opts;
getopts('dc:k:h',\%opts);

our $debug          = $opts{'d'};
my $config          = $opts{'c'} || $ENV{'HOME'}.'/.cif';
my $limit_days      = $opts{'k'} || 270;
my $mutex           = $opts{'L'} || '/tmp/cif_vaccum_hashes.lock';

die usage() if($opts{'h'});

sub usage {
    return <<EOF;
Usage: perl $0 -c 95

    -h  --help:         this meessage

Basic Usage:
    -C  --config:       specify an alternate config location, default $config
    -d  --debug
    -D  --limit_days:   max days to go back in feed search, default: $limit_days

Examples:

    $0 -D $limit_days

EOF
}

$SIG{'INT'} = 'cleanup';
$SIG{__DIE__} = 'cleanup';

my $start = time();

sub _profile {
    my ($msg) = @_;
    _debug('('.(time() - $start).') '.$msg);
}

sub cleanup {
    my $msg = shift;
    if($msg){   
        print $msg."\n";
    } else {
        print "\n\nCaught Interrupt (^C), Aborting\n";
    }
    remove_lock();
    exit(1);
}

sub remove_lock {
    system('rm '.$mutex);
}

if(-e $mutex){
    debug('already running, mutex found: '.$mutex);
    exit(-1);
}
my $ret = system('touch '.$mutex);
unless(defined($ret) && $ret == 0){
    die($!);
}

my $err;
my $timestamp = DateTime->from_epoch(epoch => (time() - ((1 + $limit_days) * 84600)));
$timestamp = $timestamp->ymd().'T00:00:00Z';

debug('using date: '.$timestamp);

my $handle = CIF::Archive::Plugin::Hash->new({ config => $config });
($err,$ret) = $handle->purge_hashes({ timestamp => $timestamp });

die($err) if($err);

if($ret){
    debug('records removed: '.$ret);
} else {
    debug('no records removed...');
}

debug('done...');

remove_lock();
exit(0);


